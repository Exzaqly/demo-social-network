{"version":3,"file":"static/js/563.cd32ed3a.chunk.js","mappings":"sKACA,EAA0B,yBAA1B,EAAgE,4BAAhE,EAA2G,8BAA3G,EAAmL,wBAAnL,EAAsN,0BAAtN,EAA0P,yB,SCO1P,EANgB,SAACA,GACb,OACI,gBAAKC,UAAWC,EAAhB,SAA4BF,EAAMG,SAEzC,E,UCSD,EAXmB,SAACH,GAChB,OACC,iBAAKC,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,UACI,gBAAKE,IAAI,eAAeC,IAAI,QAEhC,SAAC,KAAD,CAASC,GAAI,YAAcN,EAAMO,GAAjC,SAAsCP,EAAMQ,SAGpD,E,uCCLKC,GAAcC,EAAAA,EAAAA,GAAiB,IAKjCC,EAAkB,SAACX,GAAD,OACd,kBAAMY,SAAUZ,EAAMa,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CAAON,KAAM,iBAAkBO,YAAa,qBAAuBC,SAAU,CAACC,EAAAA,EAAUR,GAAcS,UAAWC,EAAAA,OAErH,0BACI,yCANM,EAWtBR,GAAiBS,EAAAA,EAAAA,GAAU,CAACC,KAAM,wBAAjBD,CAA0CT,GAG3D,IAwBA,EAxBgB,SAACX,GACb,IAAIsB,EAAkBtB,EAAMuB,YAAYC,QAAQC,KAAI,SAAAC,GAAM,OAAK,SAAC,EAAD,CAA8BlB,KAAOkB,EAAOlB,KAAMD,GAAMmB,EAAOnB,IAA5CmB,EAAOnB,GAA/B,IACtDoB,EAAkB3B,EAAMuB,YAAYK,SAASH,KAAI,SAAAtB,GAAO,OAAM,SAAC,EAAD,CAA4BA,QAAUA,EAAQA,SAA9BA,EAAQI,GAA9B,IAM5D,OACI,0BACI,iBAAKN,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKoB,KAGL,iBAAKrB,UAAWC,EAAhB,UACKyB,GACD,SAAChB,EAAD,CAAgBC,SAZZ,SAACiB,GACjB7B,EAAM8B,WAAWD,EAAOE,eAC3B,WAeJ,E,oBCrCD,GAAeC,E,QAAAA,KACXC,EAAAA,EAAAA,KALoB,SAACC,GAAD,MAAY,CAChCX,YAAaW,EAAMX,YADC,GAKK,CAACO,WAAAA,EAAAA,IAC1BK,EAAAA,EAFJ,CAGEC,E,kJCXIC,EAAkB,SAACH,GAAD,MAAY,CAChCI,OAAQJ,EAAMK,KAAKD,OADC,EAIXH,EAAmB,SAACK,GAAe,IACtCC,EADqC,0IAEvC,WACI,OAAIC,KAAK1C,MAAMsC,QAER,SAACE,GAAD,UAAeE,KAAK1C,SAFG,SAAC,KAAD,CAAUM,GAAK,UAGhD,KANsC,GACXqC,EAAAA,WAShC,OADiCV,EAAAA,EAAAA,IAAQI,EAARJ,CAAyBQ,EAE7D,C","sources":["webpack://less1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Messages/Messages.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__c8EOr\",\"dialog_img\":\"Dialogs_dialog_img__FJoxc\",\"dialog_items\":\"Dialogs_dialog_items__+A1DP\",\"active\":\"Dialogs_active__vy8mz\",\"dialog\":\"Dialogs_dialog__tZVb7\",\"messages\":\"Dialogs_messages__5o0jI\",\"message\":\"Dialogs_message__k+UDA\"};","import c from '../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return(\r\n        <div className={c.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import c from '../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    return(\r\n     <div className={c.dialog}>\r\n         <div className={c.dialog_img}>\r\n             <img src=\"./DialogItem\" alt=\"\"/>\r\n         </div>\r\n         <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n     </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem\r\n","import c from './Dialogs.module.css'\r\nimport Message from \"./Messages/Messages\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormControl/FormControl\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators\";\r\n\r\n\r\nconst maxLength20 = maxLengthCreator(20)\r\n\r\n\r\n\r\n\r\nlet AddMessageForm =  (props) => (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={'newMessageBody'} placeholder={'enter your message'}  validate={[required, maxLength20]} component={Textarea}/>\r\n            </div>\r\n            <div>\r\n                <button>send</button>\r\n            </div>\r\n        </form>\r\n)\r\n\r\nAddMessageForm = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElements = props.dialogsPage.dialogs.map(dialog => (<DialogItem key = {dialog.id} name ={dialog.name} id = {dialog.id} />))\r\n    let messageElements = props.dialogsPage.messages.map(message => ( <Message key = {message.id} message ={message.message}  />))\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageBody)\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={c.dialogs}>\r\n                <div className={c.dialog_items}>\r\n                    {dialogsElements}\r\n                </div>\r\n\r\n                <div className={c.messages}>\r\n                    {messageElements}\r\n                    <AddMessageForm onSubmit = {addNewMessage} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import React from \"react\";\r\nimport {addMessage} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    dialogsPage: state.dialogsPage,\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {addMessage}),\r\n    withAuthRedirect,\r\n)(Dialogs)\r\n","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\"\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Navigate to = \"/login\"/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n    return ConnectedRedirectComponent\r\n}"],"names":["props","className","c","message","src","alt","to","id","name","maxLength20","maxLengthCreator","AddMessageForm","onSubmit","handleSubmit","Field","placeholder","validate","required","component","Textarea","reduxForm","form","dialogsElements","dialogsPage","dialogs","map","dialog","messageElements","messages","values","addMessage","newMessageBody","compose","connect","state","withAuthRedirect","Dialogs","mapStateToProps","isAuth","auth","Component","RedirectComponent","this","React"],"sourceRoot":""}